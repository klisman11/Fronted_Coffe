{"ast":null,"code":"import \"core-js/modules/es.math.trunc.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nexport default {\n  props: {\n    deadline: {\n      type: String,\n      default: \"october 31, 2022\"\n    }\n  },\n  data: function data() {\n    return {\n      now: Math.trunc(new Date().getTime() / 1000)\n    };\n  },\n  computed: {\n    dateInMilliseconds: function dateInMilliseconds() {\n      return Math.trunc(Date.parse(this.deadline) / 1000);\n    },\n    seconds: function seconds() {\n      var sec = (this.dateInMilliseconds - this.now) % 60;\n      return \"\".concat(sec).padStart(2, \"0\");\n    },\n    minutes: function minutes() {\n      var min = Math.trunc((this.dateInMilliseconds - this.now) / 60) % 60;\n      return \"\".concat(min).padStart(2, \"0\");\n    },\n    hours: function hours() {\n      var hrs = Math.trunc((this.dateInMilliseconds - this.now) / 60 / 60) % 24;\n      return \"\".concat(hrs).padStart(2, \"0\");\n    },\n    days: function days() {\n      var day = Math.trunc((this.dateInMilliseconds - this.now) / 60 / 60 / 24);\n      return \"\".concat(day).padStart(2, \"0\");\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    setInterval(function () {\n      _this.now = Math.trunc(new Date().getTime() / 1000);\n    }, 1000);\n  }\n};","map":{"version":3,"mappings":";;AAqBA,eAAe;EACdA,KAAK,EAAE;IACNC,QAAQ,EAAE;MACTC,IAAI,EAAEC,MADG;MAETC,OAAO,EAAE;IAFA;EADJ,CADO;EAQdC,IARc,kBAQP;IACN,OAAO;MACNC,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC;IADC,CAAP;EAGA,CAZa;EAcdC,QAAQ,EAAE;IACTC,kBADS,gCACY;MACpB,OAAOL,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACI,KAAL,CAAW,KAAKZ,QAAhB,IAA4B,IAAvC,CAAP;IACA,CAHQ;IAITa,OAJS,qBAIC;MACT,IAAMC,GAAE,GAAI,CAAC,KAAKH,kBAAL,GAA0B,KAAKN,GAAhC,IAAuC,EAAnD;MACA,OAAO,UAAGS,GAAH,EAASC,QAAT,CAAkB,CAAlB,EAAqB,GAArB,CAAP;IACA,CAPQ;IAQTC,OARS,qBAQC;MACT,IAAMC,GAAE,GAAIX,IAAI,CAACC,KAAL,CAAW,CAAC,KAAKI,kBAAL,GAA0B,KAAKN,GAAhC,IAAuC,EAAlD,IAAwD,EAApE;MACA,OAAO,UAAGY,GAAH,EAASF,QAAT,CAAkB,CAAlB,EAAqB,GAArB,CAAP;IACA,CAXQ;IAYTG,KAZS,mBAYD;MACP,IAAMC,GAAE,GAAIb,IAAI,CAACC,KAAL,CAAW,CAAC,KAAKI,kBAAL,GAA0B,KAAKN,GAAhC,IAAuC,EAAvC,GAA4C,EAAvD,IAA6D,EAAzE;MACA,OAAO,UAAGc,GAAH,EAASJ,QAAT,CAAkB,CAAlB,EAAqB,GAArB,CAAP;IACA,CAfQ;IAgBTK,IAhBS,kBAgBF;MACN,IAAMC,GAAE,GAAIf,IAAI,CAACC,KAAL,CAAW,CAAC,KAAKI,kBAAL,GAA0B,KAAKN,GAAhC,IAAuC,EAAvC,GAA4C,EAA5C,GAAiD,EAA5D,CAAZ;MACA,OAAO,UAAGgB,GAAH,EAASN,QAAT,CAAkB,CAAlB,EAAqB,GAArB,CAAP;IACA;EAnBQ,CAdI;EAmCdO,OAnCc,qBAmCJ;IAAA;;IACTC,WAAW,CAAC,YAAM;MACjB,KAAI,CAAClB,GAAL,GAAWC,IAAI,CAACC,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,CAAX;IACA,CAFU,EAER,IAFQ,CAAX;EAGA;AAvCa,CAAf","names":["props","deadline","type","String","default","data","now","Math","trunc","Date","getTime","computed","dateInMilliseconds","parse","seconds","sec","padStart","minutes","min","hours","hrs","days","day","mounted","setInterval"],"sourceRoot":"","sources":["/home/klisman/Documentos/Project_Node_Vue/Coffe_vue/Fronted_Coffe/fantasic/src/components/Countdown.vue"],"sourcesContent":["<template>\r\n\t<div class=\"box-timer\">\r\n\t\t<div class=\"single-count\">\r\n\t\t\t<span class=\"count-timer\">{{ days }}</span>\r\n\t\t\t<span class=\"count-format\">Days</span>\r\n\t\t</div>\r\n\t\t<div class=\"single-count\">\r\n\t\t\t<span class=\"count-timer\">{{ hours }}</span>\r\n\t\t\t<span class=\"count-format\">Hours</span>\r\n\t\t</div>\r\n\t\t<div class=\"single-count\">\r\n\t\t\t<span class=\"count-timer\">{{ minutes }}</span>\r\n\t\t\t<span class=\"count-format\">Minutes</span>\r\n\t\t</div>\r\n\t\t<div class=\"single-count\">\r\n\t\t\t<span class=\"count-timer\">{{ seconds }}</span>\r\n\t\t\t<span class=\"count-format\">Seconds</span>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n\tprops: {\r\n\t\tdeadline: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"october 31, 2022\",\r\n\t\t},\r\n\t},\r\n\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tnow: Math.trunc(new Date().getTime() / 1000),\r\n\t\t};\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\tdateInMilliseconds() {\r\n\t\t\treturn Math.trunc(Date.parse(this.deadline) / 1000);\r\n\t\t},\r\n\t\tseconds() {\r\n\t\t\tconst sec = (this.dateInMilliseconds - this.now) % 60;\r\n\t\t\treturn `${sec}`.padStart(2, \"0\");\r\n\t\t},\r\n\t\tminutes() {\r\n\t\t\tconst min = Math.trunc((this.dateInMilliseconds - this.now) / 60) % 60;\r\n\t\t\treturn `${min}`.padStart(2, \"0\");\r\n\t\t},\r\n\t\thours() {\r\n\t\t\tconst hrs = Math.trunc((this.dateInMilliseconds - this.now) / 60 / 60) % 24;\r\n\t\t\treturn `${hrs}`.padStart(2, \"0\");\r\n\t\t},\r\n\t\tdays() {\r\n\t\t\tconst day = Math.trunc((this.dateInMilliseconds - this.now) / 60 / 60 / 24);\r\n\t\t\treturn `${day}`.padStart(2, \"0\");\r\n\t\t},\r\n\t},\r\n\tmounted() {\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.now = Math.trunc(new Date().getTime() / 1000);\r\n\t\t}, 1000);\r\n\t},\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}